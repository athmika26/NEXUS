<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Focus Timer</title>
    <link rel="stylesheet" href="/css/focus_timer.css">
</head>
<body>
    <div class="container">
        <div class="sidebar collapsed" id="sidebar" aria-label="Main menu">
            <div class="logo" id="logo">
              <span><i>Nexus</i></span>
            </div>
            <ul>
              <li class="active">
                <a href="/home">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                    <path
                      d="M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6A4.997 4.997 0 0 1 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z">
                    </path>
                  </svg>
                  <span>Notes</span>
                </a>
              </li>
              <li>
                <a href="/home/archive">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                    <path
                      d="M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM6.24 5h11.52l.83 1H5.42l.82-1zM5 19V8h14v11H5zm11-5.5l-4 4-4-4 1.41-1.41L11 13.67V10h2v3.67l1.59-1.59L16 13.5z">
                    </path>
                  </svg>
                  <span>Archive</span>
                </a>
              </li>
              <li>
                <a href="/home/wheel">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                    <path d="M12 2a1 1 0 011 1v1.07A7.994 7.994 0 0120.93 11H22a1 1 0 110 2h-1.07a7.994 7.994 0 01-7.93 6.93V21a1 1 0 11-2 0v-1.07A7.994 7.994 0 013.07 13H2a1 1 0 110-2h1.07A7.994 7.994 0 0112 4.07V3a1 1 0 011-1zm-1 2.07A6.002 6.002 0 006.07 11H11V4.07zM4.07 13A6.002 6.002 0 0011 19.93V13H4.07zm9.93 6.93A6.002 6.002 0 0017.93 13H13v6.93zM19.93 11A6.002 6.002 0 0013 4.07V11h6.93z"></path>
                  </svg>
                  <span>Spin Wheel</span>
                </a>
              </li>
              <li>
                <a href="/home/matrix">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                    <rect x="3" y="3" width="6" height="6" stroke="black" stroke-width="2" fill="none"></rect>
                    <rect x="15" y="3" width="6" height="6" stroke="black" stroke-width="2" fill="none"></rect>
                    <rect x="3" y="15" width="6" height="6" stroke="black" stroke-width="2" fill="none"></rect>
                    <rect x="15" y="15" width="6" height="6" stroke="black" stroke-width="2" fill="none"></rect>
                  </svg>
                  <span>Eisenhower Matrix</span>
                </a>
              </li>
              <li>
                <a href="/home/focus_timer">
                  <svg version="1.0" xmlns="http://www.w3.org/2000/svg"  width="24" height="24" viewBox="0 0 300.000000 300.000000"  preserveAspectRatio="xMidYMid meet">  <g transform="translate(0.000000,300.000000) scale(0.050000,-0.050000)" fill="#000000" stroke="none"> <path d="M880 5962 c-648 -176 -936 -879 -608 -1482 100 -184 111 -185 208 -6 275 511 700 896 1254 1137 l148 64 -89 78 c-239 210 -603 294 -913 209z"/> <path d="M4670 5880 c-127 -26 -290 -97 -390 -170 -113 -83 -176 -150 -140 -150 51 0 410 -183 577 -294 314 -209 660 -602 833 -945 l55 -110 49 60 c577 703 -87 1788 -984 1609z"/> <path d="M2750 5388 c-2078 -219 -3068 -2683 -1713 -4261 l148 -172 -323 -323 c-177 -177 -322 -339 -322 -358 0 -95 101 -205 230 -249 59 -20 66 -15 403 320 l343 340 118 -71 c865 -526 1917 -522 2753 11 l96 61 344 -343 c261 -260 355 -343 393 -343 71 0 173 68 209 138 66 128 55 147 -291 494 l-323 323 148 172 c1081 1255 699 3221 -773 3976 -432 222 -991 332 -1440 285z m443 -649 c1623 -181 2327 -2125 1190 -3285 -1094 -1118 -2966 -556 -3287 986 -227 1083 570 2170 1684 2298 214 24 203 24 413 1z"/> <path d="M2881 4445 c-157 -80 -150 -37 -157 -1056 l-6 -909 902 0 c980 0 969 -1 1058 112 82 104 45 301 -72 380 -52 35 -106 38 -701 44 l-645 7 0 631 c0 598 -2 635 -40 697 -74 118 -214 157 -339 94z"/> </g> </svg>  
                  <span>Focus Timer</span>
                </a>
              </li>
              </li>
            </ul>
          </div>
          <div class="main-content">
            <div class="header">
              <button id="menu-toggle">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                  <path d="M4 18h16v-2H4v2zm0-5h16v-2H4v2zm0-7v2h16V6H4z"></path>
                </svg>
              </button>
            </div>
            </div>
        <section class="timer-section">
            <div class="box">
                <h1>Focus Timer</h1>
                <div class="timer-display">
                    <svg class="progress-ring" width="120" height="120">
                        <circle class="progress-ring__circle" stroke="blue" stroke-width="4" fill="transparent" r="56" cx="60" cy="60"/>
                    </svg>
                    <div class="timer-text">
                        <span id="hours">00</span>:<span id="minutes">00</span>:<span id="seconds">00</span>
                    </div>
                </div>
                <div class="input-group">
                    <input type="number" id="hours-input" placeholder="Hours" min="0">
                    <input type="number" id="minutes-input" placeholder="Minutes" min="0" max="59">
                    <input type="number" id="seconds-input" placeholder="Seconds" min="0" max="59">
                </div>
                <button id="start-timer">Start Timer</button>
                <button id="stop-timer" style="background-color: red; color: white;">Stop Timer</button>
                <button id="clear-timer">Clear Timer</button>
            </div>
        </section>
        <section class="checklist-section">
            <div class="box">
                <h1>Checklist</h1>
                <form id="checklist-form">
                    <input type="text" id="checklist-input" placeholder="Add a new task" required>
                    <button type="submit">Add</button>
                </form>
                <ul id="checklist">
                    <!-- Checklist items will be added here -->
                </ul>
                <button id="clear-list">Clear List</button>
            </div>
        </section>
    </div>

    <script>
        let timer;
        let remainingTime = 0;
        let totalTime = 0;

        const circle = document.querySelector('.progress-ring__circle');
        const radius = circle.r.baseVal.value;
        const circumference = 2 * Math.PI * radius;

        
        circle.style.strokeDasharray = `${circumference} ${circumference}`;
        circle.style.strokeDashoffset = circumference;

        function setProgress(percent) {
            const offset = circumference - (percent / 100) * circumference;
            circle.style.strokeDashoffset = offset;
        }

        function checkAllTasksCompleted() {
            const checkboxes = document.querySelectorAll('#checklist input[type="checkbox"]');
            return Array.from(checkboxes).every(checkbox => checkbox.checked);
        }

        function showCompletionMessage() {
            alert("Congratulations on completing the tasks before time!");
        }

        document.getElementById('start-timer').addEventListener('click', function() {
            const inputHours = parseInt(document.getElementById('hours-input').value) || 0;
            const inputMinutes = parseInt(document.getElementById('minutes-input').value) || 0;
            const inputSeconds = parseInt(document.getElementById('seconds-input').value) || 0;

            totalTime = (inputHours * 3600) + (inputMinutes * 60) + inputSeconds;
            remainingTime = totalTime;

            if (totalTime <= 0) {
                alert("Please enter a valid time.");
                return;
            }

            clearInterval(timer);
            updateDisplay(remainingTime);
            document.getElementById('stop-timer').style.display = 'inline';

            timer = setInterval(() => {
                remainingTime--;
                updateDisplay(remainingTime);
                const percent = (remainingTime / totalTime) * 100;
                setProgress(percent);

                if (remainingTime <= 0) {
                    clearInterval(timer);
                    alert("Time's up!");
                }

                if (checkAllTasksCompleted()) {
                    showCompletionMessage();
                    clearInterval(timer);
                }
            }, 1000);
        });

        document.getElementById('stop-timer').addEventListener('click', function() {
            clearInterval(timer);
        });

        document.getElementById('clear-timer').addEventListener('click', function() {
            clearInterval(timer);
            remainingTime = 0;
            updateDisplay(remainingTime);
            setProgress(100);
            document.getElementById('hours-input').value = '';
            document.getElementById('minutes-input').value = '';
            document.getElementById('seconds-input').value = '';
        });

        function updateDisplay(seconds) {
            const hours = Math.floor(seconds / 3600);
            const minutes = Math.floor((seconds % 3600) / 60);
            const secs = seconds % 60;

            document.getElementById('hours').textContent = String(hours).padStart(2, '0');
            document.getElementById('minutes').textContent = String(minutes).padStart(2, '0');
            document.getElementById('seconds').textContent = String(secs).padStart(2, '0');
        }

        // Checklist functionality
        document.getElementById('checklist-form').addEventListener('submit', function(event) {
            event.preventDefault();
            const input = document.getElementById('checklist-input');
            const taskText = input.value;
            addChecklistItem(taskText);
            input.value = '';
        });

        function addChecklistItem(taskText) {
            const li = document.createElement('li');
            const checkbox = document.createElement('input');
            checkbox.type = 'checkbox';
            checkbox.classList.add('large-checkbox');
            checkbox.addEventListener('change', function() {
                li.classList.toggle('completed');
                if (checkAllTasksCompleted() && remainingTime > 0) {
                    showCompletionMessage();
                }
            });

            li.appendChild(checkbox);
            li.appendChild(document.createTextNode(taskText));
            document.getElementById('checklist').appendChild(li);
        }

        document.getElementById('clear-list').addEventListener('click', function() {
            document.getElementById('checklist').innerHTML = '';
        });
        const menuToggle = document.getElementById("menu-toggle");
menuToggle.addEventListener("click", function () {
    sidebar.classList.toggle("open");
});


    </script>

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .container {
            display: flex;
            justify-content: space-between;
            width: 80%;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        .box {
            text-align: center;
            flex: 1;
            padding: 20px;
            margin: 10px;
            border: 1px solid #ccc;
            border-radius: 8px;
            background-color: #fff;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        .timer-section, .checklist-section {
            display: flex;
            flex-direction: column;
            align-items: center;
            flex: 1;
            padding: 20px;
        }
        .timer-display {
            position: relative;
            width: 120px;
            height: 120px;
            margin: 20px auto;
        }
        .timer-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 24px;
        }
        .progress-ring__circle {
            transform: rotate(-90deg);
            transform-origin: 50% 50%;
            transition: stroke-dashoffset 0.5s;
        }
        .input-group {
            display: flex;
            justify-content: center;
            gap: 10px;
        }
        .input-group input {
            padding: 10px;
            font-size: 16px;
            margin: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
            width: 70px; /* Ensuring consistent size */
            text-align: center;
        }
        button {
            padding: 10px 20px;
            font-size: 16px;
            border: none;
            border-radius: 4px;
            background-color: #007bff;
            color: white;
            cursor: pointer;
            margin: 5px;
        }
        button:hover {
            background-color: #0056b3;
        }
        #stop-timer {
            background-color: red;
        }
        #stop-timer:hover {
            background-color: darkred;
        }
        #checklist-form {
            display: flex;
            justify-content: center;
            gap: 10px;
        }
        #checklist-input {
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 4px;
            flex: 1;
        }
        #checklist-form button {
            padding: 10px 20px;
            font-size: 16px;
            border: none;
            border-radius: 4px;
            background-color: #28a745;
            color: white;
            cursor: pointer;
        }
        #checklist-form button:hover {
            background-color: #218838;
        }
        ul {
            list-style: none;
            padding: 0;
            width: 100%;
        }
        li {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
            border-bottom: 1px solid #ccc;
        }
        li.completed {
            text-decoration: line-through;
            color: gray;
        }
        .large-checkbox {
            width: 20px;
            height: 20px;
        }
        #clear-list {
            padding: 10px 20px;
            font-size: 16px;
            border: none;
            border-radius: 4px;
            background-color: #dc3545;
            color: white;
            cursor: pointer;
            margin-top: 10px;
        }
        #clear-list:hover {
            background-color: #c82333;
        }

        
/* Sidebar styles */
.sidebar {
    width: 60px;
    background: linear-gradient(45deg, #3b8d99, #6b6b83, #aa4b6b);
    padding: 0;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    transition: width 0.3s ease;
    overflow: hidden;
}

.sidebar.open {
    width: 250px;
}

.sidebar .logo {
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    font-weight: bold;
    color: #fff;
    margin: 20px auto;
    text-align: center;
    transition: opacity 0.3s ease, width 0.3s ease;
}

.sidebar .logo span {
    transition: opacity 0.3s ease, width 0.3s ease;
    opacity: 0;
    width: 0;
    overflow: hidden;
    white-space: nowrap;
}

.sidebar.open .logo span {
    opacity: 1;
    width: auto;
    margin-left: 10px;
}

.sidebar ul {
    list-style-type: none;
    padding: 0;
}

.sidebar ul li {
    margin-bottom: 10px;
}

.sidebar ul li a {
    text-decoration: none;
    color: #fff;
    display: flex;
    align-items: center;
    padding: 10px 15px;
    border-radius: 4px;
    transition: background-color 0.3s ease;
}

.sidebar ul li.active a,
.sidebar ul li a:hover {
    background-color: rgba(255, 255, 255, 0.2);
}

.sidebar ul li a svg {
    margin-right: 10px;
    flex-shrink: 0;
    transition: margin-right 0.3s ease;
}

.sidebar ul li a span {
    transition: opacity 0.3s ease, width 0.3s ease;
    opacity: 0;
    width: 0;
    overflow: hidden;
    white-space: nowrap;
}

.sidebar.open ul li a span {
    opacity: 1;
    width: auto;
    margin-left: 10px;
}

.main-content {
    flex-grow: 1;
    margin-left: 60px;
    padding: 0;
    transition: margin-left 0.3s ease, width 0.3s ease;
    width: calc(100% - 60px);
    overflow: auto;
}

.main-content .header {
    padding: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.main-content .header button {
    font-size: 24px;
    background: none;
    border: none;
    cursor: pointer;
    color: #202124;
    position: fixed;
    top: 10px;
    left: 10px;
}

.main-content .header input[type="text"] {
    width: calc(100% - 40px);
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 18.8px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.sidebar.open ~ .main-content {
    margin-left: 250px;
    width: calc(100% - 250px);
}

.menu-button {
    border-radius: 50%;
    display: inline-block;
    margin: 0 4px;
    padding: 12px;
    overflow: hidden;
    vertical-align: middle;
    cursor: pointer;
    height: 24px;
    width: 24px;
    user-select: none;
    flex: 0 0 auto;
    color: #5f6368;
    opacity: 1;
}

    </style>
</body>
</html>